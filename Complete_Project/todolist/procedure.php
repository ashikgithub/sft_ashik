<?php		/**************	##  this function validate email and password in log_in.php    ***************/ 	function login_validation($email,$password)	{		$error_password=array();		$error_email=array();		if(empty($email))		{			$error_email['email'] = "Email is required";		}		else		{			$email = test_input($email);			if (!filter_var($email, FILTER_VALIDATE_EMAIL)) 			{				$error_email['email'] = "Invalid email format"; 			}					}		/**************		##  this function does user login by email && password in log_in.php	    ***************/ 		function login_query($email,$password)		{				include('db_connection/db_connection.php');			$statement = $db-> prepare("SELECT * FROM users WHERE user_email =? and user_pwd =? ");			$statement->execute(array($email,$password));			$result = $statement->fetchAll();			$count = $statement->rowCount();						return array($result,$count);		}						/**************		##  password validation in log_in.php		***************/ 		if(!empty($password)) 		{						$password = test_input($password);			if (strlen($password) <= '8') 			{				$error_password['pwd'] = "Your Password Must Contain At Least 8 Characters!";			}			elseif(!preg_match("#[0-9]+#",$password))			{				$error_password['pwd'] = "Your Password Must Contain At Least 1 Number!";			}			elseif(!preg_match("#[A-Z]+#",$password)) 			{				$error_password['pwd'] = "Your Password Must Contain At Least 1 Capital Letter!";			}			elseif(!preg_match("#[a-z]+#",$password))			{				$error_password['pwd']= "Your Password Must Contain At Least 1 Lowercase Letter!";			}						$password =MD5($_POST['pwd']);		}		else		{			$error_password['pwd']="Password is required";		}				return array($password,$error_password,$error_email);			}	/**************	##  this function provide data to the validation function. in log_in.php	***************/ 	function test_input($data) 	{		$data = trim($data);		$data = stripslashes($data);		$data = htmlspecialchars($data);		return $data;	} 		/**************	##  this function check user authentication (id and tk_number are encrypted)for profile_page.php	***************/	function check_authentication()	{			if(!isset($_SESSION['id']) && !isset($_SESSION['tk_number']))		{			return true;		}			}		/**************	##  this function query user authentication for profile_page.php	***************/	function check_userAuthentication_query($ID)	{			include('db_connection/db_connection.php');		$stmt=$db->prepare("select user_id,token from users where user_id=?");		$stmt->execute(array($ID));		$rslt=$stmt->fetchAll();				return array($rslt);	}		/**************	##  this function create profile_page output for profile_page.php	***************/	function user_output($ID)	{		include('db_connection/db_connection.php');		$statement = $db->prepare(" select * from users where user_id=? ");		$statement->execute(array($ID));		$result1 = $statement->fetchAll();				return array($result1);	}			/*************	##	this function query for Update profile_page in profile_pageUpdate	*************/		function updateProfile_query($ID)	{			include('db_connection/db_connection.php');		$statement= $db->prepare(" select * from users where user_id=? ");		$statement->execute(array($ID));		$result=$statement->fetchAll();				return array($result);	} 		/***************	##	this function validate updated profile in profile_pageUpdate.php	****************/	function validate_updateProfile($fname,$lname,$email,$session,$roll,$subject)	{		$error=array();		if(empty($fname))		{			 $error['fname'] = "First Name is required";		}		else		{			$fname = test_input($fname);			 if (!preg_match("/^[a-zA-Z ]*$/",$fname)) 			 {				$error['fname'] = "Your First Name Must Contain Letters and White Spaces!"; 			 }			 		}		//last name validation		if(empty($lname))		{			 $error['lname'] = "Last Name is required";		}		else		{			$lname = test_input($lname);			 if (!preg_match("/^[a-zA-Z ]*$/",$lname)) 			 {				$error['lname'] = "Your Last Name Must Contain Letters and White Spaces!"; 			 }					}		//Email validation		if(empty($email))		{			 $error['email'] = "Email is required";		}		else		{			$email = test_input($email);			 if (!filter_var($email, FILTER_VALIDATE_EMAIL)) 			 {				$error['email'] = "Invalid email format"; 			 }					}		//sesion validation		if(empty($session))		{			 $error['session'] = "session is required";		}		else		{			$session = test_input($session);			if (!preg_match("/(\d{4})-(\d{4})/",$session)) 			 {				$error['session'] = "Your Session Must Contain Numbers(4 digits)-Numbers(4 digits)!"; 			 }					}		//roll number validation		if(empty($roll))		{			 $error['roll'] = "Roll is required";		}		else		{			$roll = test_input($roll);			if(!preg_match("/^[1-9][0-9]{0,15}$/",$roll))			{				 $error['roll'] = "Your Roll Must Contain Numbers!";			}			 		}		//subject validation		if(empty($subject))		{			 $error['subject'] = "Subject is required";		}		else		{			$subject = test_input($subject);			if(!preg_match("#[A-Za-z]+#",$subject))			{				 $error['subject'] = "Your subject Must Contain Letters!";			}					}				return array($error);	}		/***************	##	this function query for Update users profile in profile_pageUpdate	##	function update_query($fname,$lname,$email,$session,$roll,$subject,$ID)	##	{			##	}	***************/	/**************	##	page_delete function	***************/	function page_delete($ID)	{		include('db_connection/db_connection.php');		$stmt1 = $db->prepare("delete from users where user_id=? ");		$stmt1->execute(array($ID));				return array($stmt1);	}	/**************	##	this function check field in create_tdl.php	***************/		function required_todoList($title,$description)	{		$error=array();		if(empty($title))		{			 $error['ttile'] = "Task Title is Required";		}		if(empty($description))		{			$error['tdes'] = "Task Description is Required";		}		return array($error);	}	/**************	##	todoList_create function in create_tdl.php	***************/	function todoList_creation($ID,$title,$description,$datetime,$status)	{				include('db_connection/db_connection.php');		$stmt =$db->prepare(" insert into to_do_lists(user_id, task_title, task_description, date, task_status) values(?,?,?,?,?) ");		$stmt->execute(array($ID,$title,$description,$datetime,$status));				return $stmt;	}	/**************	##	this function shows a user task in show_task.php	***************/	function task_view($ID)	{		include('db_connection/db_connection.php');		$stmt= $db->prepare("select task_id,task_title,task_description,date,task_status from to_do_lists where user_id=? ");		$stmt->execute(array($ID));		$result= $stmt->fetchAll();				return array($result);	}		/**************	##	this function eidt a user task in show_task.php	***************/	function task_eidt($taskid)	{		include('db_connection/db_connection.php');		$statement= $db->prepare(" select task_title,task_description,date from to_do_lists where task_id=? ");		$statement->execute(array($taskid));		$result=$statement->fetchAll();						return array($result);	}	/**************	##	this function update a user status in show_task.php	***************/	function status_Update($selected_val,$taskid)	{		include('db_connection/db_connection.php');		$stmt= $db->prepare("update to_do_lists set task_status=? where task_id=? ");		$stmt->execute(array($selected_val,$taskid));				return array($stmt);	}		/**************	##	this function view pending task to a user in pending_task.php	***************/	function task_Pending($ID,$taskstatus)	{		include('db_connection/db_connection.php');		$statement = $db->prepare(" select task_id,task_title,task_description,date,task_status FROM to_do_lists where user_id=? and task_status=? ");		$statement->execute(array($ID,$taskstatus));		$result = $statement->fetchAll();					return array($result);	}		/**************	##	this function view Completed task to a user in Completed_task.php	***************/	function task_complete($ID,$taskstatus)	{		include('db_connection/db_connection.php');		$statement= $db->prepare(" select task_id,task_title,task_description,date,task_status from to_do_lists where user_id=? and task_status=? ");		$statement->execute(array($ID,$taskstatus));		$result=$statement->fetchAll();				return array($result);	}		/**************	##	this function find specific task of a user in findin_task.php	***************/	function specific_task($ID,$start_date,$end_date)	{		include('db_connection/db_connection.php');		$stmt= $db->prepare("select task_title, task_description,date,task_status from to_do_lists where user_id=? and date>=? and date<?");		$stmt->execute(array($ID,$start_date,$end_date));		$results=$stmt->fetchAll();				return array($results);	}	/***************	##	this function validate FOrm1 input in Form1.php	****************/	function form1_input_validate($fname,$lname,$email,$session,$roll,$subject)	{			$v_fname=$v_lname=$v_email=$v_session=$v_roll=$v_subject="";		$error=array();				 if (!preg_match("/^[a-zA-Z ]*$/",$_POST['fname'])) 		 {			$error['fname'] = "Your First Name Must Contain Letters and White Spaces!"; 		 }		 if (!preg_match("/^[a-zA-Z ]*$/",$_POST['lname'])) 		 {			$error['lname'] = "Your Last Name Must Contain Letters and White Spaces!";		 }		 if (!filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) 		 {			$error['email'] = "Invalid email format"; 		 }		 if (!preg_match("/(\d{4})-(\d{4})/",$_POST['session'])) 		 {			$error['session'] = "Your Session Must Contain Numbers(4 digits)-Numbers(4 digits)!"; 		 }		if(!preg_match("/^[1-9][0-9]{0,15}$/",$_POST['roll']))		{			 $error['roll'] = "Your Roll Must Contain Numbers!";		}		if(!preg_match("#[A-Za-z]+#",$_POST['subject']))		{			 $error['subject'] = "Your subject Must Contain Letters!";		}				 $v_fname =$_POST['fname'];		 $v_lname =$_POST['lname'];		 $v_email=$_POST['email'];		 $v_session=$_POST['session'];		 $v_roll=$_POST['roll']; 		 $v_subject=$_POST['subject'];						return array($error,$v_fname,$v_lname,$v_email,$v_session,$v_roll,$v_subject);	}		/************	##	create new form	*************/	function create_new_form($v_fname,$v_lname,$v_email,$v_session,$v_roll,$v_subject,$password,$admin,$user)	{		$admin_mail="cseku.palash2011@gmail.com";		include('db_connection/db_connection.php');				/**************		##	Create new form as an Admin		***************/		if($v_email==$admin_mail)		{			$stmt=$db->prepare("insert into users(user_fname, user_lname, user_email, user_session, user_roll, user_subject,user_pwd,user_type) values(?,?,?,?,?,?,?,?) ");			$stmt->execute(array($v_fname,$v_lname,$v_email,$v_session,$v_roll,$v_subject,$password,$admin));		}				/*************		##	Create new form as an User		*************/		else		{			$stmt=$db->prepare("insert into users(user_fname, user_lname, user_email, user_session, user_roll, user_subject,user_pwd,user_type) values(?,?,?,?,?,?,?,?) ");			$stmt->execute(array($v_fname,$v_lname,$v_email,$v_session,$v_roll,$v_subject,$password,$user));		}				return array($stmt);	}?>